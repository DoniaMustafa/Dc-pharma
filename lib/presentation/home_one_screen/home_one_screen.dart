import '../home_one_screen/widgets/merkcomponent2_item_widget.dart';import '../home_one_screen/widgets/productcardgrid_item_widget.dart';import '../home_one_screen/widgets/userprofileslider_item_widget.dart';import 'bloc/home_one_bloc.dart';import 'models/home_one_model.dart';import 'models/merkcomponent2_item_model.dart';import 'models/productcardgrid_item_model.dart';import 'models/userprofileslider_item_model.dart';import 'package:carousel_slider/carousel_slider.dart';import 'package:drfarama/core/app_export.dart';import 'package:drfarama/widgets/app_bar/appbar_leading_circleimage_one.dart';import 'package:drfarama/widgets/app_bar/appbar_subtitle_four.dart';import 'package:drfarama/widgets/app_bar/appbar_subtitle_three.dart';import 'package:drfarama/widgets/app_bar/appbar_trailing_image.dart';import 'package:drfarama/widgets/app_bar/custom_app_bar.dart';import 'package:drfarama/widgets/custom_bottom_bar.dart';import 'package:flutter/material.dart';
// ignore_for_file: must_be_immutable
class HomeOneScreen extends StatelessWidget {HomeOneScreen({Key? key}) : super(key: key);

GlobalKey<NavigatorState> navigatorKey = GlobalKey();

static Widget builder(BuildContext context) { return BlocProvider<HomeOneBloc>(create: (context) => HomeOneBloc(HomeOneState(homeOneModelObj: HomeOneModel()))..add(HomeOneInitialEvent()), child: HomeOneScreen()); } 
@override Widget build(BuildContext context) { mediaQueryData = MediaQuery.of(context); return SafeArea(child: Scaffold(appBar: _buildAppBar(context), body: Container(width: double.maxFinite, padding: EdgeInsets.symmetric(vertical: 4.v), child: Column(children: [SizedBox(height: 35.v), Expanded(child: SingleChildScrollView(child: Padding(padding: EdgeInsets.only(bottom: 5.v), child: Column(crossAxisAlignment: CrossAxisAlignment.start, children: [_buildUserProfileSlider(context), SizedBox(height: 37.v), _buildCategoriesColumn(context), SizedBox(height: 216.v), _buildBestOffersRow(context), SizedBox(height: 13.v), _buildProductCardGrid(context)]))))])), bottomNavigationBar: _buildBottomBar(context))); } 
/// Section Widget
PreferredSizeWidget _buildAppBar(BuildContext context) { return CustomAppBar(leadingWidth: 68.h, leading: AppbarLeadingCircleimageOne(imagePath: ImageConstant.imgRectangle1862340x40, margin: EdgeInsets.only(left: 28.h, top: 6.v, bottom: 9.v)), title: Padding(padding: EdgeInsets.only(left: 6.h), child: Column(children: [AppbarSubtitleFour(text: "msg_current_location".tr), AppbarSubtitleThree(text: "lbl_egypt2".tr, margin: EdgeInsets.only(left: 4.h, right: 72.h))])), actions: [AppbarTrailingImage(imagePath: ImageConstant.imgContrastRed700, margin: EdgeInsets.fromLTRB(19.h, 15.v, 10.h, 9.v)), AppbarTrailingImage(imagePath: ImageConstant.imgContrastRed70039x43, margin: EdgeInsets.only(left: 9.h, top: 6.v, right: 29.h))]); } 
/// Section Widget
Widget _buildUserProfileSlider(BuildContext context) { return BlocBuilder<HomeOneBloc, HomeOneState>(builder: (context, state) {return CarouselSlider.builder(options: CarouselOptions(height: 200.v, initialPage: 0, autoPlay: true, viewportFraction: 1.0, enableInfiniteScroll: false, scrollDirection: Axis.horizontal, onPageChanged: (index, reason) {state.sliderIndex = index;}), itemCount: state.homeOneModelObj?.userprofilesliderItemList.length ?? 0, itemBuilder: (context, index, realIndex) {UserprofilesliderItemModel model = state.homeOneModelObj?.userprofilesliderItemList[index] ?? UserprofilesliderItemModel(); return UserprofilesliderItemWidget(model);});}); } 
/// Section Widget
Widget _buildCategoriesColumn(BuildContext context) { return Container(padding: EdgeInsets.symmetric(horizontal: 23.h), child: Column(crossAxisAlignment: CrossAxisAlignment.end, children: [Padding(padding: EdgeInsets.only(left: 263.h), child: Row(mainAxisAlignment: MainAxisAlignment.end, crossAxisAlignment: CrossAxisAlignment.start, children: [Text("lbl_categories".tr, style: theme.textTheme.titleMedium), Padding(padding: EdgeInsets.only(left: 203.h, bottom: 3.v), child: Text("lbl_see_all".tr, style: CustomTextStyles.titleSmallPoppinsBlack90001Medium_3)), CustomImageView(imagePath: ImageConstant.imgArrowRightBlack90001, height: 10.v, width: 5.h, margin: EdgeInsets.only(left: 4.h, top: 7.v, bottom: 9.v))])), SizedBox(height: 19.v), SizedBox(height: 97.v, child: BlocSelector<HomeOneBloc, HomeOneState, HomeOneModel?>(selector: (state) => state.homeOneModelObj, builder: (context, homeOneModelObj) {return ListView.separated(padding: EdgeInsets.only(left: 266.h, right: 5.h), scrollDirection: Axis.horizontal, separatorBuilder: (context, index) {return SizedBox(width: 47.h);}, itemCount: homeOneModelObj?.merkcomponent2ItemList.length ?? 0, itemBuilder: (context, index) {Merkcomponent2ItemModel model = homeOneModelObj?.merkcomponent2ItemList[index] ?? Merkcomponent2ItemModel(); return Merkcomponent2ItemWidget(model);});}))])); } 
/// Section Widget
Widget _buildBestOffersRow(BuildContext context) { return Align(alignment: Alignment.center, child: Padding(padding: EdgeInsets.only(left: 28.h, right: 23.h), child: Row(mainAxisAlignment: MainAxisAlignment.center, crossAxisAlignment: CrossAxisAlignment.end, children: [Padding(padding: EdgeInsets.only(bottom: 2.v), child: Text("lbl_best_offers".tr, style: theme.textTheme.titleMedium)), Spacer(), Padding(padding: EdgeInsets.only(top: 7.v), child: Text("lbl_see_all".tr, style: CustomTextStyles.titleSmallPoppinsBlack90001Medium_3)), CustomImageView(imagePath: ImageConstant.imgArrowRightBlack90001, height: 10.v, width: 5.h, margin: EdgeInsets.only(left: 4.h, top: 13.v, bottom: 5.v))]))); } 
/// Section Widget
Widget _buildProductCardGrid(BuildContext context) { return Align(alignment: Alignment.center, child: Padding(padding: EdgeInsets.only(left: 26.h, right: 19.h), child: BlocSelector<HomeOneBloc, HomeOneState, HomeOneModel?>(selector: (state) => state.homeOneModelObj, builder: (context, homeOneModelObj) {return GridView.builder(shrinkWrap: true, gridDelegate: SliverGridDelegateWithFixedCrossAxisCount(mainAxisExtent: 279.v, crossAxisCount: 2, mainAxisSpacing: 21.h, crossAxisSpacing: 21.h), physics: NeverScrollableScrollPhysics(), itemCount: homeOneModelObj?.productcardgridItemList.length ?? 0, itemBuilder: (context, index) {ProductcardgridItemModel model = homeOneModelObj?.productcardgridItemList[index] ?? ProductcardgridItemModel(); return ProductcardgridItemWidget(model, onTapBtnCartButton: () {onTapBtnCartButton(context);});});}))); } 
/// Section Widget
Widget _buildBottomBar(BuildContext context) { return CustomBottomBar(onChanged: (BottomBarEnum type) {}); } 
/// Navigates to the homeTwoScreen when the action is triggered.
onTapBtnCartButton(BuildContext context) { NavigatorService.pushNamed(AppRoutes.homeTwoScreen, ); } 
 }
